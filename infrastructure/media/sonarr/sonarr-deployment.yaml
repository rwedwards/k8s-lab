apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-media-pv
spec:
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /mnt/user/Media
    server: 192.168.2.10
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-media-pvc
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Gi
  volumeName: sonarr-media-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
        - name: sonarr
          image: ghcr.io/onedr0p/sonarr:4.0.14.2938
          ports:
            - containerPort: 8989
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /media
              name: media
      volumes:
        - name: config
          emptyDir: {} # You can replace this with a PVC if you want persistent config
        - name: media
          persistentVolumeClaim:
            claimName: sonarr-media-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: media
spec:
  selector:
    app: sonarr
  ports:
    - port: 80
      targetPort: 8989
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
  namespace: media
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - sonarr.sleepy-puppy.com
      secretName: sonarr-tls
  rules:
    - host: sonarr.sleepy-puppy.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sonarr
                port:
                  number: 80

